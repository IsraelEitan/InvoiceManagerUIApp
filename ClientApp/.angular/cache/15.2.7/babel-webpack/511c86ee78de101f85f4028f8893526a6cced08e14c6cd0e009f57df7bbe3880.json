{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nlet ValidationErrorComponent = class ValidationErrorComponent {\n  getErrors() {\n    const errors = [];\n    if (this.control) {\n      const controlErrors = this.control.errors || {};\n      for (const key of Object.keys(controlErrors)) {\n        switch (key) {\n          case 'required':\n            errors.push(`${this.fieldName} is required.`);\n            break;\n          case 'min':\n            errors.push(`${this.fieldName} must be greater than or equal to ${controlErrors[key].min}.`);\n            break;\n        }\n      }\n    }\n    return errors;\n  }\n  get fieldName() {\n    return 'Field'; // Default value\n  }\n};\n\n__decorate([Input()], ValidationErrorComponent.prototype, \"control\", void 0);\nValidationErrorComponent = __decorate([Component({\n  selector: 'app-validation-error',\n  templateUrl: './validation-error.component.html',\n  styleUrls: ['./validation-error.component.css']\n})], ValidationErrorComponent);\nexport { ValidationErrorComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,eAAe;AAQzC,IAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAGnCC,SAAS;IACP,MAAMC,MAAM,GAAa,EAAE;IAC3B,IAAI,IAAI,CAACC,OAAO,EAAE;MAChB,MAAMC,aAAa,GAAG,IAAI,CAACD,OAAO,CAACD,MAAM,IAAI,EAAE;MAC/C,KAAK,MAAMG,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACH,aAAa,CAAC,EAAE;QAC5C,QAAQC,GAAG;UACT,KAAK,UAAU;YACbH,MAAM,CAACM,IAAI,CAAC,GAAG,IAAI,CAACC,SAAS,eAAe,CAAC;YAC7C;UACF,KAAK,KAAK;YACRP,MAAM,CAACM,IAAI,CAAC,GAAG,IAAI,CAACC,SAAS,qCAAqCL,aAAa,CAACC,GAAG,CAAC,CAACK,GAAG,GAAG,CAAC;YAC5F;QAAM;;;IAId,OAAOR,MAAM;EACf;EACA,IAAIO,SAAS;IACX,OAAO,OAAO,CAAC,CAAC;EAClB;CACD;;AAtBUE,YAARZ,KAAK,EAAE,yDAAuB;AADpBC,wBAAwB,eALpCF,SAAS,CAAC;EACTc,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,GACWd,wBAAwB,CAuBpC;SAvBYA,wBAAwB","names":["Component","Input","ValidationErrorComponent","getErrors","errors","control","controlErrors","key","Object","keys","push","fieldName","min","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Lenovo\\source\\repos\\InvoiceManagerUI\\ClientApp\\src\\app\\components\\validation-error\\validation-error-component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-validation-error',\r\n  templateUrl: './validation-error.component.html',\r\n  styleUrls: ['./validation-error.component.css']\r\n})\r\nexport class ValidationErrorComponent {\r\n  @Input() control!: FormControl;\r\n\r\n  getErrors(): string[] {\r\n    const errors: string[] = [];\r\n    if (this.control) {\r\n      const controlErrors = this.control.errors || {};\r\n      for (const key of Object.keys(controlErrors)) {\r\n        switch (key) {\r\n          case 'required':\r\n            errors.push(`${this.fieldName} is required.`);\r\n            break;\r\n          case 'min':\r\n            errors.push(`${this.fieldName} must be greater than or equal to ${controlErrors[key].min}.`);\r\n            break;  \r\n        }\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n  get fieldName(): string {\r\n    return 'Field'; // Default value\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}