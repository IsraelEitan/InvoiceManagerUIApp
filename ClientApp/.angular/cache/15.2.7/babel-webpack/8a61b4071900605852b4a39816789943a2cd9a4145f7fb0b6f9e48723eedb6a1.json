{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/invoice.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../services/shared/form-helper.service\";\nimport * as i5 from \"../validation-error/validation-error.component\";\nimport * as i6 from \"../invoice-status/invoice-status.component\";\nexport class InvoiceCreateComponent {\n  constructor(formBuilder, invoiceService, router, formHelperService) {\n    this.formBuilder = formBuilder;\n    this.invoiceService = invoiceService;\n    this.router = router;\n    this.formHelperService = formHelperService;\n    // Date in 'yyyy-MM-dd' format\n    const currentDate = new Date().toISOString().split('T')[0];\n    this.invoiceForm = this.formBuilder.group({\n      date: [currentDate, Validators.required],\n      status: ['', Validators.required],\n      amount: ['', [Validators.required, Validators.min(0.01)]],\n      customerId: ['', [Validators.required, Validators.min(1)]]\n    });\n  }\n  onStatusChange(selectedStatus) {\n    this.invoiceForm.get('status')?.setValue(selectedStatus);\n  }\n  onSubmit() {\n    if (this.invoiceForm.valid) {\n      const createInvoiceDto = {\n        date: this.invoiceForm.value.date,\n        status: this.invoiceForm.value.status,\n        amount: this.invoiceForm.value.amount,\n        customerId: this.invoiceForm.value.customerId\n      };\n      this.invoiceService.createInvoice(createInvoiceDto).subscribe(result => {\n        console.log('Invoice Created', result);\n        //Navigate to the list of invoices\n        this.router.navigate(['/invoices']);\n      });\n    } else {\n      this.formHelperService.markFormGroupTouched(this.invoiceForm);\n    }\n  }\n}\nInvoiceCreateComponent.ɵfac = function InvoiceCreateComponent_Factory(t) {\n  return new (t || InvoiceCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.InvoiceService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormHelperService));\n};\nInvoiceCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InvoiceCreateComponent,\n  selectors: [[\"app-invoice-create\"]],\n  decls: 23,\n  vars: 5,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"date\", \"formControlName\", \"date\"], [3, \"control\"], [3, \"statusChange\"], [\"type\", \"number\", \"formControlName\", \"amount\"], [\"type\", \"number\", \"formControlName\", \"customerId\"], [\"type\", \"submit\"]],\n  template: function InvoiceCreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Create Invoice\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function InvoiceCreateComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\")(4, \"label\");\n      i0.ɵɵtext(5, \"Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 1)(7, \"app-validation-error\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\")(9, \"app-invoice-status\", 3);\n      i0.ɵɵlistener(\"statusChange\", function InvoiceCreateComponent_Template_app_invoice_status_statusChange_9_listener($event) {\n        return ctx.onStatusChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"app-validation-error\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\")(12, \"label\");\n      i0.ɵɵtext(13, \"Amount:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 4)(15, \"app-validation-error\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\")(17, \"label\");\n      i0.ɵɵtext(18, \"Customer ID:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 5)(20, \"app-validation-error\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 6);\n      i0.ɵɵtext(22, \"Create Invoice\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.invoiceForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"control\", ctx.invoiceForm.get(\"date\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"control\", ctx.invoiceForm.get(\"status\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"control\", ctx.invoiceForm.get(\"amount\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"control\", ctx.invoiceForm.get(\"customerId\"));\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.ValidationErrorComponent, i6.InvoiceStatusComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","InvoiceCreateComponent","constructor","formBuilder","invoiceService","router","formHelperService","currentDate","Date","toISOString","split","invoiceForm","group","date","required","status","amount","min","customerId","onStatusChange","selectedStatus","get","setValue","onSubmit","valid","createInvoiceDto","value","createInvoice","subscribe","result","console","log","navigate","markFormGroupTouched","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lenovo\\source\\repos\\InvoiceManagerUI\\ClientApp\\src\\app\\components\\invoice-create\\invoice-create.component.ts","C:\\Users\\Lenovo\\source\\repos\\InvoiceManagerUI\\ClientApp\\src\\app\\components\\invoice-create\\invoice-create.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { InvoiceService } from '../../services/invoice.service';\r\nimport { CreateInvoiceDto } from '../../dtos/create-invoice.dto'; \r\nimport { Router } from '@angular/router';\r\nimport { FormHelperService } from '../../services/shared/form-helper.service';\r\n\r\n@Component({\r\n  selector: 'app-invoice-create',\r\n  templateUrl: './invoice-create.component.html',\r\n  styleUrls: ['./invoice-create.component.css']\r\n})\r\nexport class InvoiceCreateComponent {\r\n  invoiceForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private invoiceService: InvoiceService,\r\n    private router: Router,\r\n    private formHelperService: FormHelperService\r\n  ) {\r\n\r\n    // Date in 'yyyy-MM-dd' format\r\n    const currentDate = new Date().toISOString().split('T')[0];\r\n\r\n    this.invoiceForm = this.formBuilder.group({\r\n      date: [currentDate, Validators.required],\r\n      status: ['', Validators.required],\r\n      amount: ['', [Validators.required, Validators.min(0.01)]],\r\n      customerId: ['', [Validators.required, Validators.min(1)]]\r\n    });\r\n  }\r\n\r\n  onStatusChange(selectedStatus: string) {\r\n    this.invoiceForm.get('status')?.setValue(selectedStatus);\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.invoiceForm.valid) {\r\n      const createInvoiceDto: CreateInvoiceDto = {\r\n        date: this.invoiceForm.value.date,\r\n        status: this.invoiceForm.value.status,\r\n        amount: this.invoiceForm.value.amount,\r\n        customerId: this.invoiceForm.value.customerId\r\n      };\r\n\r\n      this.invoiceService.createInvoice(createInvoiceDto).subscribe(result => {\r\n        console.log('Invoice Created', result);\r\n        //Navigate to the list of invoices\r\n        this.router.navigate(['/invoices']);\r\n      });\r\n    } else {\r\n      this.formHelperService.markFormGroupTouched(this.invoiceForm);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","<h2>Create Invoice</h2>\r\n<form [formGroup]=\"invoiceForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div>\r\n    <label>Date:</label>\r\n    <input type=\"date\" formControlName=\"date\">\r\n    <app-validation-error [control]=\"invoiceForm.get('date')!\"></app-validation-error>\r\n  </div>\r\n  <div>\r\n    <app-invoice-status (statusChange)=\"onStatusChange($event)\"></app-invoice-status>\r\n    <app-validation-error [control]=\"invoiceForm.get('status')!\"></app-validation-error>\r\n  </div>\r\n  <div>\r\n    <label>Amount:</label>\r\n    <input type=\"number\" formControlName=\"amount\">\r\n    <app-validation-error [control]=\"invoiceForm.get('amount')!\"></app-validation-error>\r\n  </div>\r\n  <div>\r\n    <label>Customer ID:</label>\r\n    <input type=\"number\" formControlName=\"customerId\">\r\n    <app-validation-error [control]=\"invoiceForm.get('customerId')!\"></app-validation-error>\r\n  </div>\r\n  <button type=\"submit\">Create Invoice</button>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}