{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/invoice.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../invoice-status/invoice-status.component\";\nfunction InvoiceCreateComponent_div_3_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \" Date is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InvoiceCreateComponent_div_3_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \" Status is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InvoiceCreateComponent_div_3_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \" Amount is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InvoiceCreateComponent_div_3_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \" Amount must be greater than or equal to 0.01. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InvoiceCreateComponent_div_3_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \" Customer ID is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InvoiceCreateComponent_div_3_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \" Customer ID must be greater than or equal to 1. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InvoiceCreateComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1, \" Please correct the following errors: \");\n    i0.ɵɵelementStart(2, \"ul\");\n    i0.ɵɵtemplate(3, InvoiceCreateComponent_div_3_li_3_Template, 2, 0, \"li\", 8);\n    i0.ɵɵtemplate(4, InvoiceCreateComponent_div_3_li_4_Template, 2, 0, \"li\", 8);\n    i0.ɵɵtemplate(5, InvoiceCreateComponent_div_3_li_5_Template, 2, 0, \"li\", 8);\n    i0.ɵɵtemplate(6, InvoiceCreateComponent_div_3_li_6_Template, 2, 0, \"li\", 8);\n    i0.ɵɵtemplate(7, InvoiceCreateComponent_div_3_li_7_Template, 2, 0, \"li\", 8);\n    i0.ɵɵtemplate(8, InvoiceCreateComponent_div_3_li_8_Template, 2, 0, \"li\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.invoiceForm.get(\"date\").hasError(\"required\") && ctx_r0.invoiceForm.get(\"date\").touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.invoiceForm.get(\"status\").hasError(\"required\") && ctx_r0.invoiceForm.get(\"status\").touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.invoiceForm.get(\"amount\").hasError(\"required\") && ctx_r0.invoiceForm.get(\"amount\").touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.invoiceForm.get(\"amount\").hasError(\"min\") && ctx_r0.invoiceForm.get(\"amount\").touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.invoiceForm.get(\"customerId\").hasError(\"required\") && ctx_r0.invoiceForm.get(\"customerId\").touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.invoiceForm.get(\"customerId\").hasError(\"min\") && ctx_r0.invoiceForm.get(\"customerId\").touched);\n  }\n}\nexport class InvoiceCreateComponent {\n  constructor(formBuilder, invoiceService, router) {\n    this.formBuilder = formBuilder;\n    this.invoiceService = invoiceService;\n    this.router = router;\n    this.invoiceForm = this.formBuilder.group({\n      date: ['', Validators.required],\n      status: ['', Validators.required],\n      amount: ['', [Validators.required, Validators.min(0.01)]],\n      customerId: ['', [Validators.required, Validators.min(1)]]\n    });\n  }\n  onStatusChange(selectedStatus) {\n    this.selectedStatus = selectedStatus;\n  }\n  onSubmit() {\n    if (this.invoiceForm.valid) {\n      const createInvoiceDto = {\n        date: this.invoiceForm.value.date,\n        status: this.invoiceForm.value.status,\n        amount: this.invoiceForm.value.amount,\n        customerId: this.invoiceForm.value.customerId\n      };\n      this.invoiceService.createInvoice(createInvoiceDto).subscribe(result => {\n        console.log('Invoice Created', result);\n        //Navigate to the list of invoices\n        this.router.navigate(['/invoices']);\n      });\n    }\n  }\n}\nInvoiceCreateComponent.ɵfac = function InvoiceCreateComponent_Factory(t) {\n  return new (t || InvoiceCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.InvoiceService), i0.ɵɵdirectiveInject(i3.Router));\n};\nInvoiceCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InvoiceCreateComponent,\n  selectors: [[\"app-invoice-create\"]],\n  decls: 20,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"class\", \"error-summary\", 4, \"ngIf\"], [\"type\", \"date\", \"formControlName\", \"date\"], [3, \"statusChange\"], [\"type\", \"number\", \"formControlName\", \"amount\"], [\"type\", \"number\", \"formControlName\", \"customerId\"], [\"type\", \"submit\"], [1, \"error-summary\"], [4, \"ngIf\"]],\n  template: function InvoiceCreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Create Invoice\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function InvoiceCreateComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtemplate(3, InvoiceCreateComponent_div_3_Template, 9, 6, \"div\", 1);\n      i0.ɵɵelementStart(4, \"div\")(5, \"label\");\n      i0.ɵɵtext(6, \"Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\")(9, \"app-invoice-status\", 3);\n      i0.ɵɵlistener(\"statusChange\", function InvoiceCreateComponent_Template_app_invoice_status_statusChange_9_listener($event) {\n        return ctx.onStatusChange($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\")(11, \"label\");\n      i0.ɵɵtext(12, \"Amount:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\")(15, \"label\");\n      i0.ɵɵtext(16, \"Customer ID:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 6);\n      i0.ɵɵtext(19, \"Create Invoice\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.invoiceForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.invoiceForm.invalid);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.InvoiceStatusComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","InvoiceCreateComponent","constructor","formBuilder","invoiceService","router","invoiceForm","group","date","required","status","amount","min","customerId","onStatusChange","selectedStatus","onSubmit","valid","createInvoiceDto","value","createInvoice","subscribe","result","console","log","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lenovo\\source\\repos\\InvoiceManagerUI\\ClientApp\\src\\app\\components\\invoice-create\\invoice-create.component.ts","C:\\Users\\Lenovo\\source\\repos\\InvoiceManagerUI\\ClientApp\\src\\app\\components\\invoice-create\\invoice-create.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { InvoiceService } from '../../services/invoice.service';\r\nimport { CreateInvoiceDto } from '../../dtos/create-invoice.dto'; \r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-invoice-create',\r\n  templateUrl: './invoice-create.component.html',\r\n  styleUrls: ['./invoice-create.component.css']\r\n})\r\nexport class InvoiceCreateComponent {\r\n  invoiceForm: FormGroup;\r\n  selectedStatus!: string;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private invoiceService: InvoiceService,\r\n    private router: Router\r\n  ) {\r\n    this.invoiceForm = this.formBuilder.group({\r\n      date: ['', Validators.required],\r\n      status: ['', Validators.required],\r\n      amount: ['', [Validators.required, Validators.min(0.01)]],\r\n      customerId: ['', [Validators.required, Validators.min(1)]]\r\n    });\r\n  }\r\n\r\n  onStatusChange(selectedStatus: string) {\r\n    this.selectedStatus = selectedStatus;\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.invoiceForm.valid) {\r\n      const createInvoiceDto: CreateInvoiceDto = {\r\n        date: this.invoiceForm.value.date,\r\n        status: this.invoiceForm.value.status,\r\n        amount: this.invoiceForm.value.amount,\r\n        customerId: this.invoiceForm.value.customerId\r\n      };\r\n\r\n      this.invoiceService.createInvoice(createInvoiceDto).subscribe(result => {\r\n        console.log('Invoice Created', result);\r\n        //Navigate to the list of invoices\r\n        this.router.navigate(['/invoices']); \r\n      });\r\n    }\r\n  }\r\n}\r\n","<h2>Create Invoice</h2>\r\n<form [formGroup]=\"invoiceForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n  <div *ngIf=\"invoiceForm.invalid\" class=\"error-summary\">\r\n    Please correct the following errors:\r\n    <ul>\r\n      <li *ngIf=\"invoiceForm.get('date').hasError('required') && invoiceForm.get('date').touched\">\r\n        Date is required.\r\n      </li>\r\n      <li *ngIf=\"invoiceForm.get('status').hasError('required') && invoiceForm.get('status').touched\">\r\n        Status is required.\r\n      </li>\r\n      <li *ngIf=\"invoiceForm.get('amount').hasError('required') && invoiceForm.get('amount').touched\">\r\n        Amount is required.\r\n      </li>\r\n      <li *ngIf=\"invoiceForm.get('amount').hasError('min') && invoiceForm.get('amount').touched\">\r\n        Amount must be greater than or equal to 0.01.\r\n      </li>\r\n      <li *ngIf=\"invoiceForm.get('customerId').hasError('required') && invoiceForm.get('customerId').touched\">\r\n        Customer ID is required.\r\n      </li>\r\n      <li *ngIf=\"invoiceForm.get('customerId').hasError('min') && invoiceForm.get('customerId').touched\">\r\n        Customer ID must be greater than or equal to 1.\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div>\r\n    <label>Date:</label>\r\n    <input type=\"date\" formControlName=\"date\">\r\n  </div>\r\n  <div>\r\n    <app-invoice-status (statusChange)=\"onStatusChange($event)\"></app-invoice-status>\r\n  </div>\r\n  <div>\r\n    <label>Amount:</label>\r\n    <input type=\"number\" formControlName=\"amount\">\r\n  </div>\r\n  <div>\r\n    <label>Customer ID:</label>\r\n    <input type=\"number\" formControlName=\"customerId\">\r\n  </div>\r\n  <button type=\"submit\">Create Invoice</button>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}