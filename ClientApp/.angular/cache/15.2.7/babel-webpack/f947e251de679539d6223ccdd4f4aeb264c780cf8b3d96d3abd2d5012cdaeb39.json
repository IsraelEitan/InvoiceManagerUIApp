{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class GlobalErrorHandler {\n  constructor(router) {\n    this.router = router;\n  }\n  handleError(error) {\n    console.error('Global error handler:', error);\n    this.router.navigate(['/error']);\n  }\n}\nGlobalErrorHandler.ɵfac = function GlobalErrorHandler_Factory(t) {\n  return new (t || GlobalErrorHandler)(i0.ɵɵinject(i1.Router));\n};\nGlobalErrorHandler.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GlobalErrorHandler,\n  factory: GlobalErrorHandler.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,kBAAkB;EAC7BC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAY;EAEtCC,WAAW,CAACC,KAAU;IACpBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,IAAI,CAACF,MAAM,CAACI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;;AANWN,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAO,SAAlBP,kBAAkB;EAAAQ,YAFjB;AAAM","names":["GlobalErrorHandler","constructor","router","handleError","error","console","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Lenovo\\source\\repos\\InvoiceManagerUI\\ClientApp\\src\\app\\error-handler.service.ts"],"sourcesContent":["import { ErrorHandler, Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlobalErrorHandler implements ErrorHandler {\r\n  constructor(private router: Router) { }\r\n\r\n  handleError(error: any): void {\r\n    console.error('Global error handler:', error);\r\n    this.router.navigate(['/error']);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}